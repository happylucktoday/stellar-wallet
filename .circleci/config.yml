version: 2

# Set up some defaults to make things cleaner
# Note that "defaults" is *not* magic
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8

enable_job_on_tags: &enable_job_on_tags
  filters:
    tags:
      only: /^v\d+\.\d+\.\d+.*/
enable_job_on_master_or_release: &enable_job_on_master_or_release
  filters:
    tags:
      only: /^v\d+\.\d+\.\d+.*/
    branches:
      only: master
enable_job_on_release_only: &enable_job_on_release_only
  filters:
    tags:
      only: /^v\d+\.\d+\.\d+.*/
    branches:
      ignore: /.*/

jobs:
  setup:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          key: repo-cache-{{ .Revision }}
          paths:
            - ~/repo

  testIfItBuilds:
    <<: *defaults
    steps:
      - restore_cache:
          key: repo-cache-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm run prebuild:electron

  # Note that the `npm run build:*` commands will automatically create a GitHub release and upload binaries
  build:
    <<: *defaults
    steps:
      - restore_cache:
          key: repo-cache-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm run prebuild:electron
      - run: sudo apt-get install rpm
      - run: npm run build:mac -- --mac=zip
      - run: npm run build:linux -- --linux=deb --linux=rpm
      - save_cache:
          key: dist-cache-{{ .Revision }}
          paths:
            - ~/repo/electron/dist
      - store_artifacts:
          path: ~/repo/electron/dist

  test:
    <<: *defaults
    steps:
      - restore_cache:
          key: repo-cache-{{ .Revision }}
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run: npm test

workflows:
  version: 2
  build_and_test:
    jobs:
      - setup:
          context: org-global
          <<: *enable_job_on_tags
      - test:
          requires:
            - setup
          <<: *enable_job_on_tags
      - testIfItBuilds:
          requires:
            - setup
          <<: *enable_job_on_master_or_release
      - build:
          requires:
            - setup
          <<: *enable_job_on_release_only
